version: "3"

tasks:
  default:
    silent: true
    cmds:
      - task --list

  test:
    cmds:
      - hatch run pytest tests

  build:
    cmds:
      - python -m build

  project:init:
    desc: Initialize the project
    cmds:
      - python -m pip install --upgrade pip
      - python -m pip install pip-tools
      - task: project:pip:install:all
      - pre-commit install-hooks
      - pre-commit install
      - pre-commit run -a

  project:pip:requirements:update:
    desc: Create requirements from pyproject
    cmds:
      - pip-compile --generate-hashes -o requirements/app.txt pyproject.toml
      - pip-compile --generate-hashes --extra dev -o requirements/dev.txt pyproject.toml

  project:pip:install:app:
    desc: Install requirements for app
    run: once
    cmds:
      - pip install -r requirements/app.txt

  project:pip:install:dev:
    desc: Install requirements for dev
    run: once
    cmds:
      - pip install -r requirements/dev.txt

  project:pip:install:all:
    desc: Install all requirements for project
    run: once
    cmds:
      - task: project:pip:install:app
      - task: project:pip:install:dev

  project:update:
    desc: Upgrades all project dependencies
    cmds:
      - pre-commit autoupdate
      - pip install --upgrade pip
      - pur
      - pip install -r requirements.txt

  project:generate:envrc:
    desc: Create pyenvrc and envrc
    run: once
    cmds:
      - python -m envrctl generate

  project:pydoc:
    desc: Run pydoc browser
    run: once
    cmds:
      - python -m pydoc -b
