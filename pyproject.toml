[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "envrctl"
version = "0.0.3"
description = 'envrc generator'
readme = "README.md"
requires-python = ">=3.7"
license = { file = "LICENSE" }
keywords = ["envrc", "psenvrc", "direnv", "posh-env"]
authors = [{ name = "James Wilkus", email = "jfwilkus@gmail.com" }]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["click", "rich", "jinja2", "pyyaml"]

[project.optional-dependencies]
dev = [
  "bandit",
  "black",
  "bumpver",
  "ipython",
  "mypy",
  "pip-tools",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-mock",
  "types-PyYAML",
]

[project.urls]
Documentation = "https://github.com/jfwilkus/envrctl#readme"
Issues = "https://github.com/jfwilkus/envrctl/issues"
Source = "https://github.com/jfwilkus/envrctl"

[project.scripts]
envrctl = "envrctl.cli:main"

[tool.coverage.run]
branch = true
parallel = true
omit = ["envrctl/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true

[tool.ruff]
line-length = 88
select = ["F", "E", "W", "I"]

[tool.mypy]
follow_imports = "normal"
ignore_missing_imports = true

[tool.bumpver]
current_version = "0.0.3"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
